/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cron;

import entidades.Parameter;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.comm.CommPortIdentifier;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;

/**
 *
 * @author p062964
 */
public class Cron extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Cron() {

        initComponents();
        popularCombo();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        selectCom = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        lblMin = new javax.swing.JLabel();
        lblSeg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        redPontuacao = new javax.swing.JLabel();
        bluePontuacao = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        redFaltaContador = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        blueFaltaContador = new javax.swing.JLabel();
        redMaisUm = new javax.swing.JButton();
        blueMaisUm = new javax.swing.JButton();
        redMenosUm = new javax.swing.JButton();
        blueMenosUm = new javax.swing.JButton();
        redFalta = new javax.swing.JButton();
        blueFalta = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuConfiguracoes = new javax.swing.JMenu();
        MenuConfigurar = new javax.swing.JMenuItem();
        menuAjuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        selectCom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selectCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectComActionPerformed(evt);
            }
        });

        lblMin.setBackground(new java.awt.Color(0, 0, 0));
        lblMin.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblMin.setForeground(new java.awt.Color(255, 153, 153));
        lblMin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblMin.setOpaque(true);

        lblSeg.setBackground(new java.awt.Color(0, 0, 0));
        lblSeg.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblSeg.setForeground(new java.awt.Color(255, 153, 153));
        lblSeg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSeg.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblSeg.setOpaque(true);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 153));
        jLabel1.setText(":");

        redPontuacao.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        redPontuacao.setForeground(new java.awt.Color(204, 0, 0));
        redPontuacao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        redPontuacao.setText("RED");

        bluePontuacao.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        bluePontuacao.setForeground(new java.awt.Color(0, 0, 204));
        bluePontuacao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bluePontuacao.setText("BLUE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("Faltas:");

        redFaltaContador.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        redFaltaContador.setForeground(new java.awt.Color(204, 0, 0));
        redFaltaContador.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setText("Faltas:");

        blueFaltaContador.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        blueFaltaContador.setForeground(new java.awt.Color(0, 0, 204));
        blueFaltaContador.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(redPontuacao, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMin, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSeg, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(redFaltaContador, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(363, 363, 363)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(bluePontuacao, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(blueFaltaContador, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblMin, lblSeg});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bluePontuacao, redPontuacao});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSeg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(redFaltaContador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(blueFaltaContador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bluePontuacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(redPontuacao, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))))
                .addContainerGap())
        );

        redMaisUm.setText("RED+1");
        redMaisUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redMaisUmActionPerformed(evt);
            }
        });

        blueMaisUm.setText("BLUE +1");
        blueMaisUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueMaisUmActionPerformed(evt);
            }
        });

        redMenosUm.setText("RED-1");
        redMenosUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redMenosUmActionPerformed(evt);
            }
        });

        blueMenosUm.setText("BLUE-1");
        blueMenosUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueMenosUmActionPerformed(evt);
            }
        });

        redFalta.setText("RED Falta");
        redFalta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redFaltaActionPerformed(evt);
            }
        });

        blueFalta.setText("BLUE Falta");
        blueFalta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueFaltaActionPerformed(evt);
            }
        });

        menuConfiguracoes.setText("Configurações");

        MenuConfigurar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        MenuConfigurar.setText("Configurar");
        MenuConfigurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuConfigurarActionPerformed(evt);
            }
        });
        menuConfiguracoes.add(MenuConfigurar);

        jMenuBar1.add(menuConfiguracoes);

        menuAjuda.setText("Ajuda");
        jMenuBar1.add(menuAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(selectCom, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(redMaisUm)
                                .addGap(18, 18, 18)
                                .addComponent(blueMaisUm)
                                .addGap(18, 18, 18)
                                .addComponent(redMenosUm)
                                .addGap(18, 18, 18)
                                .addComponent(blueMenosUm)
                                .addGap(18, 18, 18)
                                .addComponent(redFalta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(blueFalta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(222, 222, 222))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redMaisUm)
                    .addComponent(blueMaisUm)
                    .addComponent(redMenosUm)
                    .addComponent(blueMenosUm)
                    .addComponent(redFalta)
                    .addComponent(blueFalta))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //iniciaCronometro();
        if (rodando) {
            jButton1.setText("Pausar");
        }
        try {
            cronometrar("01", "30");
        } catch (InterruptedException ex) {
            Logger.getLogger(Cron.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            List<Parameter> listaParametros = new ArrayList<Parameter>();
            Funcoes funcoes = new Funcoes();
            listaParametros =  funcoes.carregaParametros();
        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void selectComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectComActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectComActionPerformed

    private void redMaisUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redMaisUmActionPerformed
        contadorVermelho = contadorVermelho+1;
        redPontuacao.setText(Integer.toString(contadorVermelho));
        
    }//GEN-LAST:event_redMaisUmActionPerformed

    private void blueMaisUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueMaisUmActionPerformed
        contadorAzul = contadorAzul+1;
        bluePontuacao.setText(Integer.toString(contadorAzul));
    }//GEN-LAST:event_blueMaisUmActionPerformed

    private void redMenosUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redMenosUmActionPerformed
        contadorVermelho = contadorVermelho-1;
        redPontuacao.setText(Integer.toString(contadorVermelho));
    }//GEN-LAST:event_redMenosUmActionPerformed

    private void blueMenosUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueMenosUmActionPerformed
       contadorAzul = contadorAzul-1;
        bluePontuacao.setText(Integer.toString(contadorAzul));
    }//GEN-LAST:event_blueMenosUmActionPerformed

    private void redFaltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redFaltaActionPerformed
       faltaVermelho = faltaVermelho+1;
       redFaltaContador.setText(Integer.toString(faltaVermelho));
    }//GEN-LAST:event_redFaltaActionPerformed

    private void blueFaltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueFaltaActionPerformed
       faltaAzul = faltaAzul+1;
       blueFaltaContador.setText(Integer.toString(faltaAzul));
    }//GEN-LAST:event_blueFaltaActionPerformed

    private void MenuConfigurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuConfigurarActionPerformed
        if (th.isAlive()){
        th.stop();}
        lblMin.setText("0");
        lblSeg.setText("0");
        rodando = false;
        jButton1.setText("Iniciar");
        
        showDialog();
       
    }//GEN-LAST:event_MenuConfigurarActionPerformed

    
    private void showDialog() 
{   Parametros param = new Parametros();
    param.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
    param.setModal(true);
    int valor = param.getTeste();
    //JDialog dialog = new JDialog(param, Dialog.ModalityType.APPLICATION_MODAL);
    
     
    //OR, you can do the following...
    //JDialog dialog = new JDialog();
    //dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);

    
    //dialog.setVisible(true);
    param.setVisible(true);
    System.out.println("valor: "+valor);
}
    
    
    /**
     * @param args the command line arguments
     */
    public void popularCombo() {
        DefaultComboBoxModel comboModel = (DefaultComboBoxModel) selectCom.getModel();
        selectCom.removeAllItems();
        Enumeration<?> portList = CommPortIdentifier.getPortIdentifiers();
        while (portList.hasMoreElements()) {
            CommPortIdentifier cpi = (CommPortIdentifier) portList.nextElement();
            if (cpi.getPortType() == CommPortIdentifier.PORT_SERIAL) {
                selectCom.addItem(cpi.getName());

            }
        }
        redFaltaContador.setText("0");
        blueFaltaContador.setText("0");
        redPontuacao.setText("0");
        bluePontuacao.setText("0");
        
    }
    final SimpleDateFormat formato = new SimpleDateFormat("mm:ss");

    /*public void iniciaCronometro() {
        Timer timer = null;

        if (timer == null) {
            timer = new Timer();
            TimerTask tarefa = new TimerTask() {
                public void run() {
                    try {
                        textMinutos.setText(formato.format(new Date().getTime()));

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            };
            timer.scheduleAtFixedRate(tarefa, 0, 1000);
        }
    }*/
    boolean rodando;
    Thread th = null;
    boolean pausado;
    int contadorAzul ;
    int contadorVermelho ;
    int faltaAzul ;
    int faltaVermelho ;

    public void cronometrar(String m, String s) throws InterruptedException {

       if (!pausado) {
            if (!rodando) {
                jButton1.setText("Pausar");
                th = new Thread(new Runnable() {

                    @Override
                    public void run() {
                           addWindowListener(new WindowAdapter() {
                            @Override public void windowClosing(WindowEvent e) {
                                Funcoes func = new Funcoes();
                                //func.fechaBanco();
                          }
                        });
                        int totalSegundos = Integer.parseInt(s);
                        int min = Integer.parseInt(m);
                        min = min * 60;  //
                        totalSegundos = min + totalSegundos;

                        for (int i = totalSegundos; i > 0; i--) { //tempo recebido em segundos 

                            totalSegundos--;

                            int horas = totalSegundos / 3600; //Para descobrir o total de horas. 
                            int minutos = (totalSegundos - (horas * 3600)) / 60; //Para descobrir o total de minutos. 
                            int segundos = (totalSegundos - (horas * 3600)) - (minutos * 60); //Para descobrir o total de segundos. 
                            String minString = Integer.toString(minutos);
                            String segString = Integer.toString(segundos);
                            
                            if(minString.length()== 1){
                                minString = "0"+ minString;
                            }
                               if(segString.length()== 1){
                                segString = "0"+ segString;
                            }
                            lblMin.setText(minString);
                            lblSeg.setText(segString);
                            
                            try {
                                th.sleep(1000);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(Cron.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            if (horas == 0 && minutos == 0 && segundos == 0) {
                                rodando = false;
                                jButton1.setText("Iniciar");
                                break;
                            }

                        }

                        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }
                });

                th.start();
                rodando = true;
                pausado = false;
                //th.sleep(1000);
            } else {
                th.suspend();
                rodando = false;
                pausado = true;
                jButton1.setText("Resumir");
            }
        } else {
            th.resume();
            jButton1.setText("Pausar");
            pausado = false;
            rodando = true;
        }
        

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuConfigurar;
    private javax.swing.JButton blueFalta;
    private javax.swing.JLabel blueFaltaContador;
    private javax.swing.JButton blueMaisUm;
    private javax.swing.JButton blueMenosUm;
    private javax.swing.JLabel bluePontuacao;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblSeg;
    private javax.swing.JMenu menuAjuda;
    private javax.swing.JMenu menuConfiguracoes;
    private javax.swing.JButton redFalta;
    private javax.swing.JLabel redFaltaContador;
    private javax.swing.JButton redMaisUm;
    private javax.swing.JButton redMenosUm;
    private javax.swing.JLabel redPontuacao;
    private javax.swing.JComboBox selectCom;
    // End of variables declaration//GEN-END:variables
}
